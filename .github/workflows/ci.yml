name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  CheckFormat:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0

      - uses: oprypin/install-crystal@v1
        with:
          crystal: latest

      - name: Format
        run: crystal tool format --check

      - name: Set up Crystal cache
        uses: actions/cache@v2.1.7
        id: crystal-cache
        with:
          path: |
            ~/.cache/crystal
            bin/ameba
            lib
          key: ${{ runner.os }}-crystal-${{ hashFiles('**/shard.yml') }}
          restore-keys: |
            ${{ runner.os }}-crystal-
      - name: Install shards
        if: steps.crystal-cache.outputs.cache-hit != 'true'
        run: shards check || shards install --ignore-crystal-version

      - name: Run ameba linter
        run: ./bin/ameba

  RunSpecs:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USERNAME: postgres
        ports:
          - 5432:5432
       # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      fail-fast: true
      matrix:
        crystal_version:
          - 1.2.0
          - latest
        experimental:
          - false

    steps:
      - name: Configure sysctl limits
        run: |
          sudo swapoff -a
          sudo sysctl -w vm.swappiness=1
          sudo sysctl -w fs.file-max=262144
          sudo sysctl -w vm.max_map_count=262144

      - uses: getong/elasticsearch-action@v1.2
        with:
          elasticsearch version: '8.1.2'
          host port: 9200
          container port: 9200
          host node port: 9300
          node port: 9300
          discovery type: 'single-node'
      - uses: actions/checkout@v2.4.0

      - uses: oprypin/install-crystal@v1
        with:
          crystal: ${{ matrix.crystal_version }}

      - name: Set up Crystal cache
        uses: actions/cache@v2.1.7
        id: crystal-cache
        with:
          path: |
            ~/.cache/crystal
            bin/ameba
            lib
          key: ${{ runner.os }}-crystal-${{ matrix.crystal_version }}-${{ hashFiles('**/shard.yml') }}
          restore-keys: |
            ${{ runner.os }}-crystal-
      - name: Install shards
        if: steps.crystal-cache.outputs.cache-hit != 'true'
        run: shards check || shards install --ignore-crystal-version

      - name: Install PostgreSQL client
        run: |
          sudo apt-get update
          sudo apt-get install --yes postgresql-client

      - name: Setup database
        run: |
          psql -h localhost -U postgres -c 'CREATE DATABASE "lucky_search_test";'
          psql -h localhost -U postgres -c 'CREATE TABLE `basics` ( `id` INT NOT NULL AUTO_INCREMENT, `name` VARCHAR(200), PRIMARY KEY (`id`) );'
          psql -h localhost -U postgres -c 'CREATE TABLE `goats` ( `id` INT NOT NULL AUTO_INCREMENT, `name` VARCHAR(200), `teeth` INT, `job` VARCHAR(200), PRIMARY KEY (`id`) );'
          psql -h localhost -U postgres -c 'CREATE TABLE `children` ( `id` INT NOT NULL AUTO_INCREMENT, `visits` TEXT, `age` INT, `hoof_treatment` VARCHAR(200), `goat_id` INT PRIMARY KEY (`id`) );'
        env:
          PGPASSWORD: postgres

      - name: Run tests
        run: crystal spec
        env:
          LUCKY_ENV: test
          DB_HOST: localhost
          DB_USERNAME: postgres
          DB_PASSWORD: postgres